docs_deploy: &docs
  docker:
    - image: node:8.10.0
  steps:
    - checkout
    - attach_workspace:
        at: docs/_build
    - run:
        name: Disable jekyll builds
        command: touch docs/_build/html/.nojekyll
    - run:
        name: Install and configure dependencies
        command: |
          npm install -g --silent gh-pages@2.0.1
          git config user.email "crn.poldracklab@gmail.com"
          git config user.name "ci-build"
    - add_ssh_keys:
        fingerprints:
          - "ae:95:0c:cc:09:84:64:99:92:82:b7:b5:f4:a7:e9:23"
    - run:
        name: Deploy docs to gh-pages branch
        command: gh-pages --dotfiles --message "doc(update) [skip ci]" --dist docs/_build/html

version: 2
jobs:
  tests:
    docker:
      - image: circleci/python:3.7.6
    working_directory: /tmp/tests
    environment:
      - OSF_MIRROR_PATH: /tmp/data/templateflow
    steps:
      - checkout:
          path: /tmp/src/templateflow

      - restore_cache:
          keys:
            - deps-v9-{{ checksum "/tmp/src/templateflow/requirements.txt"}}-{{ epoch }}
            - deps-v9-{{ checksum "/tmp/src/templateflow/requirements.txt"}}-
            - deps-v9-
      - run:
          name: Prepare environment
          command: |
            python -m venv /tmp/venv
            source /tmp/venv/bin/activate
            pip install -U pip
            pip install -r /tmp/src/templateflow/requirements.txt
            pip install "datalad ~= 0.11.8" "doi2bib < 0.4"
            pip install "setuptools>=45" "setuptools_scm >= 6.2" twine codecov

      - run:
          name: Install git and git-annex
          command: |
            if [[ ! -e "/tmp/cache/git-annex-standalone.tar.gz" ]]; then
              wget -O- http://neuro.debian.net/lists/focal.us-ca.full | sudo tee /etc/apt/sources.list.d/neurodebian.sources.list
              sudo apt-key adv --recv-keys --keyserver hkp://pool.sks-keyservers.net:80 0xA5D32F012649A5A9
              sudo apt update && sudo apt-get install -y --no-install-recommends git-annex-standalone
              mkdir -p /tmp/cache
              tar czvf /tmp/cache/git-annex-standalone.tar.gz /usr/bin/git-annex /usr/bin/git-annex-shell /usr/lib/git-annex.linux
            else
              sudo tar xzfv /tmp/cache/git-annex-standalone.tar.gz -C /
            fi
            git config --global user.name "First Last"
            git config --global user.email "email@domain.com"

      - save_cache:
          key: deps-v9-{{ checksum "/tmp/src/templateflow/requirements.txt"}}-{{ epoch }}
          paths:
            - "/tmp/cache"
            - "/tmp/venv"

      - run:
          name: Run tests (w/ DataLad)
          command: |
            source /tmp/venv/bin/activate
            export TEMPLATEFLOW_USE_DATALAD=on
            pytest --junit-xml=/tmp/tests/datalad.xml --cov templateflow --cov-report xml:/tmp/cov_api_dl.xml \
                   --doctest-modules /tmp/src/templateflow/templateflow

      - run:
          name: Submit api test coverage
          command: |
            source /tmp/venv/bin/activate
            codecov --file /tmp/cov_api_dl.xml --root /tmp/src/templateflow \
                --flags api,datalad -e CIRCLE_JOB

      - run:
          name: Run tests (pulling from S3)
          command: |
            source /tmp/venv/bin/activate
            export TEMPLATEFLOW_USE_DATALAD=off
            export TEMPLATEFLOW_HOME=$HOME/templateflow-s3
            pytest --junit-xml=/tmp/tests/s3.xml --cov templateflow --cov-report xml:/tmp/cov_api_s3.xml \
                   --doctest-modules /tmp/src/templateflow/templateflow/api.py

      - run:
          name: Submit api test coverage
          command: |
            source /tmp/venv/bin/activate
            codecov --file /tmp/cov_api_s3.xml --root /tmp/src/templateflow \
                --flags api,s3 -e CIRCLE_JOB

      - run:
          name: Run tests (w/ DataLad, bypassed via S3)
          command: |
            source /tmp/venv/bin/activate
            export TEMPLATEFLOW_USE_DATALAD=off
            export TEMPLATEFLOW_HOME=$HOME/templateflow-clean
            datalad install -r -s https://github.com/templateflow/templateflow $TEMPLATEFLOW_HOME
            pytest --junit-xml=/tmp/tests/dl+s3.xml --cov templateflow --cov-report xml:/tmp/cov_api_dl_s3.xml \
                   --doctest-modules /tmp/src/templateflow/templateflow/api.py

      - run:
          name: Submit api test coverage
          command: |
            source /tmp/venv/bin/activate
            codecov --file /tmp/cov_api_dl_s3.xml --root /tmp/src/templateflow \
                --flags api,dls3 -e CIRCLE_JOB

      - run:
          name: Run tests (config, parameterized TEMPLATEFLOW_USE_DATALAD)
          command: |
            source /tmp/venv/bin/activate
            pytest --junit-xml=/tmp/tests/conftests.xml --cov templateflow --cov-report xml:/tmp/cov_config.xml \
                   /tmp/src/templateflow/templateflow/conf/tests/test_conf.py

      - run:
          name: Submit config test coverage
          command: |
            source /tmp/venv/bin/activate
            codecov --file /tmp/cov_config.xml --root /tmp/src/templateflow \
                --flags config -e CIRCLE_JOB

      - store_test_results:
          path: /tmp/tests

      - run:
          name: Test packaging
          command: |
            source /tmp/venv/bin/activate
            cd /tmp/src/templateflow
            python setup.py sdist
            twine check dist/*

  build_docs:
    docker:
      - image: python:3.7.4
    environment:
      - FSLOUTPUTTYPE: NIFTI
      - SUBJECTS_DIR: /tmp/subjects
    steps:
      - restore_cache:
          keys:
            - docs-v1-{{ .Branch }}-{{ .Revision }}
            - docs-v1-{{ .Branch }}-
            - docs-v1-master
            - docs-v1-
          paths:
            - ./docs/_build/_html
      - checkout
      - run:
          name: Create subjects folder
          command: mkdir -p $SUBJECTS_DIR
      - run:
          name: Install Graphviz
          command: apt update && apt -y install graphviz
      - run:
          name: Install deps
          command: |
            pip install --no-cache-dir "setuptools>=45" "setuptools_scm >= 6.2"
            pip install --no-cache-dir -r docs/requirements.txt
      - run:
          name: Build only this commit
          command: |
            python setup.py --version
            make -C docs SPHINXOPTS="-W" BUILDDIR="_build/no_version_html" html
      - store_artifacts:
          path: ./docs/_build/no_version_html
      - run:
          name: Generate Versioned Docs
          command: |
            set +e
            force_versioned="$( git log --format=oneline -n 1 $CIRCLE_SHA1 | grep -i -E '\[docs?[ _]?versions?\]' )"
            set -e
            if [[ "x${CIRCLE_TAG}" = "x" && "${CIRCLE_BRANCH}" != "master" && "x${force_versioned}" = "x" ]]; then
              echo "Not a tag or master branch - skipping versioned docs."
              circleci step halt
            else
              make -f ./docs/Makefile versioned CURBRANCH=${CIRCLE_TAG:-$CIRCLE_BRANCH}
            fi
      - save_cache:
          key: docs-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ./docs/_build/_html
      - persist_to_workspace:
          root: docs/_build
          paths: html
      - store_artifacts:
          path: ./docs/_build/html

  deploy_pypi:
    docker:
      - image: circleci/python:3.7.6
    working_directory: /tmp/src/templateflow
    steps:
      - attach_workspace:
          at: /tmp

      - checkout:
          path: /tmp/src/templateflow

      - restore_cache:
          keys:
            - deps-v9-{{ checksum "/tmp/src/templateflow/requirements.txt"}}-{{ epoch }}
            - deps-v9-{{ checksum "/tmp/src/templateflow/requirements.txt"}}-
            - deps-v9-

      - run:
          name: Deploy to PyPi
          command: |
            source /tmp/venv/bin/activate
            pip install "setuptools>=45" "setuptools_scm >= 6.2" wheel twine
            python setup.py sdist bdist_wheel
            twine check dist/*
            twine upload dist/*

  deploy_docs_tag:
    <<: *docs

  deploy_docs_master:
    <<: *docs

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - tests:
          filters:
            branches:
              ignore:
                - /docs?\/.*/
            tags:
              only: /.*/
      - deploy_pypi:
          requires:
            - deploy_docs_tag
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

      - build_docs:
          filters:
            branches:
              ignore:
                - /tests?\/.*/
            tags:
              only: /.*/

      - deploy_docs_master:
          requires:
            - tests
            - build_docs
          filters:
            branches:
              only: /master/
            tags:
              ignore: /.*/

      - deploy_docs_tag:
          requires:
            - tests
            - build_docs
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

  nightly:
    triggers:
      - schedule:
          cron: "0 10 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - tests
