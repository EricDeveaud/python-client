# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
    tags: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    if: "!startsWith(github.ref, 'refs/tags/') && !contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        pip: ["pip==21.2", "pip~=22.0"]

    steps:
    - uses: actions/checkout@v2
    - name: Fetch all tags (for setuptools_scm to work)
      run: |
        /usr/bin/git -c protocol.version=2 fetch --tags --prune --unshallow origin
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v1
      with:
        path: $HOME/.cache/pip
        key: pip-cache-v1
        restore-keys: |
          pip-cache-

    - name: Build in confined environment and interpolate version
      run: |
        python -m venv /tmp/buildenv
        source /tmp/buildenv/bin/activate
        python -m pip install -U "setuptools >= 45" wheel "setuptools_scm >= 6.2" \
                              setuptools_scm_git_archive pip twine docutils
        python setup.py sdist bdist_wheel
        python -m twine check dist/templateflow*

        mv dist /tmp/package
        rm -rf templateflow.egg-info/

        # Interpolate version
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          TAG=${GITHUB_REF##*/}
        fi
        THISVERSION=$( python setup.py --version )
        THISVERSION=${TAG:-$THISVERSION}
        echo "Expected VERSION: \"${THISVERSION}\""
        echo "THISVERSION=${THISVERSION}" >> $GITHUB_ENV

    - name: Install in confined environment [pip]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/pip
      run: |
        python -m venv /tmp/pip
        source /tmp/pip/bin/activate
        python -m pip install -U "setuptools >= 45" "setuptools_scm >= 6.2" "${{ matrix.pip }}"
        python -m pip install .
        INSTALLED_VERSION=$(python -c 'import templateflow as tf; print(tf.__version__, end="")')
        echo "VERSION: \"${THISVERSION}\""
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"

    - name: Install in confined environment [sdist]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/sdist
      run: |
        python -m venv /tmp/install_sdist
        source /tmp/install_sdist/bin/activate
        python -m pip install -U "setuptools >= 45" "${{ matrix.pip }}"
        python -m pip install /tmp/package/templateflow*.tar.gz
        INSTALLED_VERSION=$(python -c 'import templateflow as tf; print(tf.__version__, end="")')
        echo "VERSION: \"${THISVERSION}\""
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"

    - name: Re-install in confined environment [sdist]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/sdist
      run: |
        source /tmp/install_sdist/bin/activate
        python -m pip install /tmp/package/templateflow*.tar.gz --force-reinstall
        find ${TEMPLATEFLOW_HOME} >> /tmp/.sdist-install.txt
    - name: Re-install in confined environment [sdist - missing template]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/sdist
      run: |
        rm -rf ${TEMPLATEFLOW_HOME}/tpl-MNI152NLin2009cAsym
        source /tmp/install_sdist/bin/activate
        python -m pip install /tmp/package/templateflow*.tar.gz --force-reinstall
        python -c "import templateflow; templateflow.update(overwrite=False)"
        find ${TEMPLATEFLOW_HOME} >> /tmp/.sdist-install-2.txt
        diff /tmp/.sdist-install.txt /tmp/.sdist-install-2.txt
        exit $?

    - name: Install in confined environment [wheel]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/wheel
      run: |
        python -m venv /tmp/install_wheel
        source /tmp/install_wheel/bin/activate
        python -m pip install -U "setuptools >= 45" "${{ matrix.pip }}"
        python -m pip install /tmp/package/templateflow*.whl
        INSTALLED_VERSION=$(python -c 'import templateflow as tf; print(tf.__version__, end="")')
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"

    - name: Re-install in confined environment [wheel]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/wheel
      run: |
        source /tmp/install_wheel/bin/activate
        python -m pip install /tmp/package/templateflow*.whl --force-reinstall
        find ${TEMPLATEFLOW_HOME} >> /tmp/.wheel-install.txt
    - name: Re-install in confined environment [wheel - missing template]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/wheel
      run: |
        rm -rf ${TEMPLATEFLOW_HOME}/tpl-MNI152NLin2009cAsym
        source /tmp/install_wheel/bin/activate
        python -m pip install /tmp/package/templateflow*.whl --force-reinstall
        # Wheels do not run post-install hooks:
        test ! -d ${TEMPLATEFLOW_HOME}/tpl-MNI152NLin2009cAsym
        python -c "import templateflow; templateflow.update(overwrite=False)"
        find ${TEMPLATEFLOW_HOME} >> /tmp/.wheel-install-2.txt
        diff /tmp/.wheel-install.txt /tmp/.wheel-install-2.txt
        exit $?

    - name: Install in confined environment [setup.py - install]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/setup_install
      run: |
        python -m venv /tmp/setup_install
        source /tmp/setup_install/bin/activate
        python -m pip install -U "setuptools >= 45" wheel "setuptools_scm >= 6.2" \
                              setuptools_scm_git_archive "${{ matrix.pip }}"
        python -m pip install "numpy==1.20" Cython "pandas==1.3" "scipy==1.7"
        python setup.py install
        INSTALLED_VERSION=$(python -c 'import templateflow as tf; print(tf.__version__, end="")')
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"

    - name: Re-install in confined environment [setup.py - install]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/setup_install
      run: |
        source /tmp/setup_install/bin/activate
        python setup.py install
        find ${TEMPLATEFLOW_HOME} >> /tmp/.setup-install.txt
    - name: Re-install in confined environment [setup.py - install - missing template]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/setup_install
      run: |
        rm -rf ${TEMPLATEFLOW_HOME}/tpl-MNI152NLin2009cAsym
        source /tmp/setup_install/bin/activate
        python setup.py install
        python -c "import templateflow; templateflow.update(overwrite=False)"
        find ${TEMPLATEFLOW_HOME} >> /tmp/.setup-install-2.txt
        diff /tmp/.setup-install.txt /tmp/.setup-install-2.txt
        exit $?

    - name: Install in confined environment [setup.py - develop]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/setup_develop
      run: |
        python -m venv /tmp/setup_develop
        source /tmp/setup_develop/bin/activate
        python -m pip install -U "setuptools >= 45" wheel "setuptools_scm >= 6.2" \
                              setuptools_scm_git_archive "${{ matrix.pip }}"
        python -m pip install "numpy==1.20" Cython "pandas==1.3" "scipy==1.7"
        python setup.py develop
        INSTALLED_VERSION=$(python -c 'import templateflow as tf; print(tf.__version__, end="")')
        echo "INSTALLED: \"${INSTALLED_VERSION}\""
        test "${INSTALLED_VERSION}" = "${THISVERSION}"

    - name: Re-install in confined environment [setup.py - develop]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/setup_develop
      run: |
        source /tmp/setup_develop/bin/activate
        python setup.py develop
        find ${TEMPLATEFLOW_HOME} >> /tmp/.setup-develop.txt

    - name: Re-install in confined environment [setup.py - develop - missing template]
      env:
        TEMPLATEFLOW_HOME: /tmp/home/setup_develop
      run: |
        rm -rf ${TEMPLATEFLOW_HOME}/tpl-MNI152NLin2009cAsym
        source /tmp/setup_develop/bin/activate
        python setup.py develop
        python -c "import templateflow; templateflow.update(overwrite=False)"
        find ${TEMPLATEFLOW_HOME} >> /tmp/.setup-develop-2.txt
        diff /tmp/.setup-develop.txt /tmp/.setup-develop-2.txt
        exit $?
